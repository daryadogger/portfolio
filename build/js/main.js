(function () {
  'use strict';

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  var nodeListForEach = function nodeListForEach() {
    if ('NodeList' in window && !NodeList.prototype.forEach) {
      NodeList.prototype.forEach = function (callback, thisArg) {
        thisArg = thisArg || window;

        for (var i = 0; i < this.length; i++) {
          callback.call(thisArg, this[i], i, this);
        }
      };
    }
  };

  var menuOpen = function menuOpen() {
    // Открытие моб меню
    var $buttonsMenu = $(".js-open-menu");

    if ($buttonsMenu.length) {
      var $menu = $(".menu");
      var $buttonClose = $(".js-btn-close");
      var $header = $(".header");
      $buttonsMenu.each(function () {
        var $btn = $(this);

        var scrollHeader = function scrollHeader() {
          if ($menu.hasClass("is-show")) {
            if ($menu.scrollTop() > 1) {
              $header.addClass("scroll");
            } else {
              $header.removeClass("scroll");
            }
          }
        };

        $btn.click(function () {
          // если открыто меню
          if ($menu.hasClass("is-show")) {
            var pos = parseInt($("body").attr("data-scroll"), 10);
            $menu.removeClass("is-show");
            $btn.removeClass("is-show");
            $header.removeClass("scroll");
            $("body").removeClass("is-menu-open").removeAttr("data-scroll");
            window.scrollTo(0, pos); // если закрыто меню
          } else {
            $menu.addClass("is-show");

            if ($menu.scrollTop() > 1) {
              $header.addClass("scroll");
            }

            setTimeout(function () {
              $btn.addClass("is-show");
            }, 100);
            setTimeout(function () {
              var pagePos = $(window).scrollTop();
              $("body").addClass("is-menu-open").attr("data-scroll", pagePos);
            }, 450);
          }
        });
        $(".menu").on("scroll", scrollHeader);
      });
      $buttonClose.click(function () {
        var pos = parseInt($("body").attr("data-scroll"), 10);
        $menu.removeClass("is-show");
        $buttonsMenu.each(function () {
          var $btn = $(this);
          $btn.removeClass("is-show");
        });
        $("body").removeClass("is-menu-open").removeAttr("data-scroll");
        window.scrollTo(0, pos);
      });
    }
  };

  var technologiesAnimation = function technologiesAnimation() {
    var container = $(".technologies .row");

    if (container) {
      var items = container.find(".technologies__item");
      var value = 0;

      for (var i = 0; i < items.length; i++) {
        value = value + 80;
        var val = value + "ms";
        $(items[i]).css("transition-delay", val);
      }

      container.on('inview', function (event, isInView) {
        if (isInView) {
          items.each(function () {
            $(this).addClass("transform");
          });
        } else {
          items.each(function () {
            $(this).removeClass("transform");
          });
        }
      });
    }
  };

  var headerScroll = function headerScroll() {
    var main = document.querySelector("main");
    var $header = $(".header");

    if ($header) {
      var scrollHeader = function scrollHeader() {
        var introTop = main.getBoundingClientRect().top;

        if (introTop < -1) {
          $header.addClass("scroll");
        } else if ($header.hasClass("scroll") && introTop > -1) {
          $header.removeClass("scroll");
        }
      };

      $(window).on("scroll", scrollHeader);
      $(document).on("ready", scrollHeader);
    }
  };

  var ankors = function ankors() {
    var links = $(".js-ankor");

    if (!links) {
      return;
    }

    var partname = window.location.pathname; //Проверяем на document.ready наличие #hashtag в url, и если есть, скроллим до нужной секции

    var checkHash = function checkHash() {
      if (window.location.hash) {
        var hash = window.location.hash;

        if ($(hash).length) {
          $('html, body').animate({
            scrollTop: $(hash).offset().top - 60
          }, 900, 'swing');
        }
      }
    };

    $(document).ready(checkHash); // На кнопки вешаем обработчики событий

    links.each(function () {
      $(this).on("click", function (evt) {
        // Нужно, чтобы меню закрывалось и страница скроллилась до секции
        if ($(".menu").hasClass("is-show")) {
          $(".menu").removeClass("is-show");
          $('body').removeClass('is-menu-open').removeAttr('data-scroll');
          checkHash(); // Обычный скрипт скролла до необходимой секции в data атрибуте без перезагрузки страницы
        } else {
          evt.preventDefault();
          var hash = $(this).attr('data-href');

          if ($(hash).length) {
            $('html, body').animate({
              scrollTop: $(hash).offset().top - 100
            }, 900, 'swing');
          }
        }
      });
      $(this).on("focus", function (evt) {
        // Нужно, чтобы меню закрывалось и страница скроллилась до секции
        if ($(".menu").hasClass("is-show")) {
          $(".menu").removeClass("is-show");
          $(".js-open-menu").removeClass("is-show");
          $('body').removeClass('is-menu-open').removeAttr('data-scroll');
          checkHash(); // Обычный скрипт скролла до необходимой секции в data атрибуте без перезагрузки страницы
        } else {
          evt.preventDefault();
          var hash = $(this).attr('data-href');

          if ($(hash).length) {
            $('html, body').animate({
              scrollTop: $(hash).offset().top - 100
            }, 900, 'swing');
          }
        }
      });
    });
  };

  var App = /*#__PURE__*/function () {
    function App() {
      _classCallCheck(this, App);
    }

    _createClass(App, null, [{
      key: "init",
      value: function init() {
        nodeListForEach();
        menuOpen();
        technologiesAnimation();
        headerScroll();
        ankors();
      }
    }]);

    return App;
  }();

  App.init();
  window.App = App;

}());

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXMiOlsic3JjL2pzL25vZGUtbGlzdC1mb3ItZWFjaC5qcyIsInNyYy9qcy9tZW51LW9wZW4uanMiLCJzcmMvanMvdGVjaG5vbG9naWVzLWFuaW1hdGlvbi5qcyIsInNyYy9qcy9oZWFkZXIuanMiLCJzcmMvanMvYW5rb3JzLmpzIiwic3JjL2pzL21haW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgbm9kZUxpc3RGb3JFYWNoID0gKCkgPT4ge1xuICBpZiAoJ05vZGVMaXN0JyBpbiB3aW5kb3cgJiYgIU5vZGVMaXN0LnByb3RvdHlwZS5mb3JFYWNoKSB7XG4gICAgTm9kZUxpc3QucHJvdG90eXBlLmZvckVhY2ggPSBmdW5jdGlvbiAoY2FsbGJhY2ssIHRoaXNBcmcpIHtcbiAgICB0aGlzQXJnID0gdGhpc0FyZyB8fCB3aW5kb3c7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgY2FsbGJhY2suY2FsbCh0aGlzQXJnLCB0aGlzW2ldLCBpLCB0aGlzKTtcbiAgICB9XG4gICAgfTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgbm9kZUxpc3RGb3JFYWNoO1xuIiwiY29uc3QgbWVudU9wZW4gPSAoKSA9PiB7XG4gIC8vINCe0YLQutGA0YvRgtC40LUg0LzQvtCxINC80LXQvdGOXG4gIGNvbnN0ICRidXR0b25zTWVudSA9ICQoXCIuanMtb3Blbi1tZW51XCIpO1xuXG4gIGlmICgkYnV0dG9uc01lbnUubGVuZ3RoKSB7XG4gICAgY29uc3QgJG1lbnUgPSAkKFwiLm1lbnVcIik7XG4gICAgY29uc3QgJGJ1dHRvbkNsb3NlID0gJChcIi5qcy1idG4tY2xvc2VcIik7XG4gICAgY29uc3QgJGhlYWRlciA9ICQoXCIuaGVhZGVyXCIpO1xuXG4gICAgJGJ1dHRvbnNNZW51LmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgY29uc3QgJGJ0biA9ICQodGhpcyk7XG5cbiAgICAgIGNvbnN0IHNjcm9sbEhlYWRlciA9ICgpID0+IHtcbiAgICAgICAgaWYgKCRtZW51Lmhhc0NsYXNzKFwiaXMtc2hvd1wiKSkge1xuXG4gICAgICAgICAgaWYoJG1lbnUuc2Nyb2xsVG9wKCkgPiAxKSB7XG4gICAgICAgICAgICAkaGVhZGVyLmFkZENsYXNzKFwic2Nyb2xsXCIpO1xuXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICRoZWFkZXIucmVtb3ZlQ2xhc3MoXCJzY3JvbGxcIik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICAkYnRuLmNsaWNrKGZ1bmN0aW9uKCkge1xuICAgICAgICAvLyDQtdGB0LvQuCDQvtGC0LrRgNGL0YLQviDQvNC10L3RjlxuICAgICAgICBpZiAoJG1lbnUuaGFzQ2xhc3MoXCJpcy1zaG93XCIpKSB7XG5cbiAgICAgICAgICBjb25zdCBwb3MgPSBwYXJzZUludCgkKFwiYm9keVwiKS5hdHRyKFwiZGF0YS1zY3JvbGxcIiksIDEwKTtcbiAgICAgICAgICAkbWVudS5yZW1vdmVDbGFzcyhcImlzLXNob3dcIik7XG4gICAgICAgICAgJGJ0bi5yZW1vdmVDbGFzcyhcImlzLXNob3dcIik7XG4gICAgICAgICAgJGhlYWRlci5yZW1vdmVDbGFzcyhcInNjcm9sbFwiKTtcblxuICAgICAgICAgICQoXCJib2R5XCIpLnJlbW92ZUNsYXNzKFwiaXMtbWVudS1vcGVuXCIpLnJlbW92ZUF0dHIoXCJkYXRhLXNjcm9sbFwiKTtcbiAgICAgICAgICB3aW5kb3cuc2Nyb2xsVG8oMCwgcG9zKTtcblxuICAgICAgICAgIC8vINC10YHQu9C4INC30LDQutGA0YvRgtC+INC80LXQvdGOXG4gICAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgICAkbWVudS5hZGRDbGFzcyhcImlzLXNob3dcIik7XG5cbiAgICAgICAgICBpZigkbWVudS5zY3JvbGxUb3AoKSA+IDEpIHtcbiAgICAgICAgICAgICRoZWFkZXIuYWRkQ2xhc3MoXCJzY3JvbGxcIik7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAkYnRuLmFkZENsYXNzKFwiaXMtc2hvd1wiKTtcblxuICAgICAgICAgIH0sIDEwMCk7XG5cbiAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGNvbnN0IHBhZ2VQb3MgPSAkKHdpbmRvdykuc2Nyb2xsVG9wKCk7XG4gICAgICAgICAgICAkKFwiYm9keVwiKS5hZGRDbGFzcyhcImlzLW1lbnUtb3BlblwiKS5hdHRyKFwiZGF0YS1zY3JvbGxcIiwgcGFnZVBvcyk7XG4gICAgICAgICAgfSwgNDUwKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgICQoXCIubWVudVwiKS5vbihcInNjcm9sbFwiLCBzY3JvbGxIZWFkZXIpO1xuICAgIH0pO1xuXG4gICAgJGJ1dHRvbkNsb3NlLmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgIGNvbnN0IHBvcyA9IHBhcnNlSW50KCQoXCJib2R5XCIpLmF0dHIoXCJkYXRhLXNjcm9sbFwiKSwgMTApO1xuICAgICAgJG1lbnUucmVtb3ZlQ2xhc3MoXCJpcy1zaG93XCIpO1xuICAgICAgJGJ1dHRvbnNNZW51LmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICBjb25zdCAkYnRuID0gJCh0aGlzKTtcbiAgICAgICAgJGJ0bi5yZW1vdmVDbGFzcyhcImlzLXNob3dcIik7XG4gICAgICB9KTtcblxuICAgICAgJChcImJvZHlcIikucmVtb3ZlQ2xhc3MoXCJpcy1tZW51LW9wZW5cIikucmVtb3ZlQXR0cihcImRhdGEtc2Nyb2xsXCIpO1xuICAgICAgd2luZG93LnNjcm9sbFRvKDAsIHBvcyk7XG4gICAgfSk7XG5cbiAgfVxuXG59O1xuXG5leHBvcnQgZGVmYXVsdCBtZW51T3BlbjtcbiIsImNvbnN0IHRlY2hub2xvZ2llc0FuaW1hdGlvbiA9ICgpID0+IHtcbiAgY29uc3QgY29udGFpbmVyID0gJChcIi50ZWNobm9sb2dpZXMgLnJvd1wiKTtcblxuICBpZiAoY29udGFpbmVyKSB7XG4gICAgY29uc3QgaXRlbXMgPSBjb250YWluZXIuZmluZChcIi50ZWNobm9sb2dpZXNfX2l0ZW1cIik7XG5cbiAgICBsZXQgdmFsdWUgPSAwO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBpdGVtcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFsdWUgPSB2YWx1ZSArIDgwO1xuICAgICAgbGV0IHZhbCA9IHZhbHVlICsgXCJtc1wiO1xuICAgICAgJChpdGVtc1tpXSkuY3NzKFwidHJhbnNpdGlvbi1kZWxheVwiLCB2YWwpO1xuICAgIH1cblxuICAgIGNvbnRhaW5lci5vbignaW52aWV3JywgZnVuY3Rpb24oZXZlbnQsIGlzSW5WaWV3KSB7XG4gICAgICBpZiAoaXNJblZpZXcpIHtcbiAgICAgICAgaXRlbXMuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAkKHRoaXMpLmFkZENsYXNzKFwidHJhbnNmb3JtXCIpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGl0ZW1zLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgJCh0aGlzKS5yZW1vdmVDbGFzcyhcInRyYW5zZm9ybVwiKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IHRlY2hub2xvZ2llc0FuaW1hdGlvbjtcbiIsImNvbnN0IGhlYWRlclNjcm9sbCA9ICgpID0+IHtcbiAgY29uc3QgbWFpbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJtYWluXCIpO1xuXG4gIGNvbnN0ICRoZWFkZXIgPSAkKFwiLmhlYWRlclwiKTtcblxuICBpZiAoJGhlYWRlcikge1xuXG4gICAgY29uc3Qgc2Nyb2xsSGVhZGVyID0gKCkgPT4ge1xuICAgICAgY29uc3QgaW50cm9Ub3AgPSBtYWluLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcDtcblxuICAgICAgaWYgKGludHJvVG9wIDwgLTEpIHtcbiAgICAgICAgJGhlYWRlci5hZGRDbGFzcyhcInNjcm9sbFwiKTtcblxuICAgICAgfSBlbHNlIGlmICgkaGVhZGVyLmhhc0NsYXNzKFwic2Nyb2xsXCIpICYmIGludHJvVG9wID4gLTEpIHtcbiAgICAgICAgJGhlYWRlci5yZW1vdmVDbGFzcyhcInNjcm9sbFwiKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgJCh3aW5kb3cpLm9uKFwic2Nyb2xsXCIsIHNjcm9sbEhlYWRlcik7XG4gICAgJChkb2N1bWVudCkub24oXCJyZWFkeVwiLCBzY3JvbGxIZWFkZXIpO1xuXG4gIH1cblxufTtcblxuZXhwb3J0IGRlZmF1bHQgaGVhZGVyU2Nyb2xsO1xuIiwiY29uc3QgYW5rb3JzID0gKCkgPT4ge1xuICBjb25zdCBsaW5rcyA9ICQoXCIuanMtYW5rb3JcIik7XG4gIGlmICghbGlua3MpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBjb25zdCBwYXJ0bmFtZSA9IHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZTtcblxuICAvL9Cf0YDQvtCy0LXRgNGP0LXQvCDQvdCwIGRvY3VtZW50LnJlYWR5INC90LDQu9C40YfQuNC1ICNoYXNodGFnINCyIHVybCwg0Lgg0LXRgdC70Lgg0LXRgdGC0YwsINGB0LrRgNC+0LvQu9C40Lwg0LTQviDQvdGD0LbQvdC+0Lkg0YHQtdC60YbQuNC4XG4gIGNvbnN0IGNoZWNrSGFzaCA9IGZ1bmN0aW9uKCkge1xuICAgIGlmICh3aW5kb3cubG9jYXRpb24uaGFzaCkge1xuICAgICAgY29uc3QgaGFzaCA9IHdpbmRvdy5sb2NhdGlvbi5oYXNoO1xuXG4gICAgICBpZiAoJChoYXNoKS5sZW5ndGgpIHtcbiAgICAgICAgICAkKCdodG1sLCBib2R5JykuYW5pbWF0ZSh7XG4gICAgICAgICAgICAgIHNjcm9sbFRvcDogKCQoaGFzaCkub2Zmc2V0KCkudG9wIC0gNjApLFxuICAgICAgICAgIH0sIDkwMCwgJ3N3aW5nJyk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gICQoZG9jdW1lbnQpLnJlYWR5KGNoZWNrSGFzaCk7XG5cbiAgLy8g0J3QsCDQutC90L7Qv9C60Lgg0LLQtdGI0LDQtdC8INC+0LHRgNCw0LHQvtGC0YfQuNC60Lgg0YHQvtCx0YvRgtC40LlcbiAgbGlua3MuZWFjaChmdW5jdGlvbigpIHtcbiAgICAkKHRoaXMpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24oZXZ0KSB7XG4gICAgICAvLyDQndGD0LbQvdC+LCDRh9GC0L7QsdGLINC80LXQvdGOINC30LDQutGA0YvQstCw0LvQvtGB0Ywg0Lgg0YHRgtGA0LDQvdC40YbQsCDRgdC60YDQvtC70LvQuNC70LDRgdGMINC00L4g0YHQtdC60YbQuNC4XG4gICAgICBpZiAoJChcIi5tZW51XCIpLmhhc0NsYXNzKFwiaXMtc2hvd1wiKSkge1xuXG4gICAgICAgICQoXCIubWVudVwiKS5yZW1vdmVDbGFzcyhcImlzLXNob3dcIik7XG4gICAgICAgICQoJ2JvZHknKS5yZW1vdmVDbGFzcygnaXMtbWVudS1vcGVuJykucmVtb3ZlQXR0cignZGF0YS1zY3JvbGwnKTtcbiAgICAgICAgY2hlY2tIYXNoKCk7XG5cbiAgICAgIC8vINCe0LHRi9GH0L3Ri9C5INGB0LrRgNC40L/RgiDRgdC60YDQvtC70LvQsCDQtNC+INC90LXQvtCx0YXQvtC00LjQvNC+0Lkg0YHQtdC60YbQuNC4INCyIGRhdGEg0LDRgtGA0LjQsdGD0YLQtSDQsdC10Lcg0L/QtdGA0LXQt9Cw0LPRgNGD0LfQutC4INGB0YLRgNCw0L3QuNGG0YtcbiAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgdmFyIGhhc2ggPSAkKHRoaXMpLmF0dHIoJ2RhdGEtaHJlZicpO1xuXG4gICAgICAgIGlmICgkKGhhc2gpLmxlbmd0aCkge1xuICAgICAgICAgICAgJCgnaHRtbCwgYm9keScpLmFuaW1hdGUoe1xuICAgICAgICAgICAgICAgIHNjcm9sbFRvcDogKCQoaGFzaCkub2Zmc2V0KCkudG9wIC0gMTAwKSxcbiAgICAgICAgICAgIH0sIDkwMCwgJ3N3aW5nJyk7XG4gICAgICAgIH1cblxuICAgICAgfVxuICAgIH0pO1xuXG4gICAgJCh0aGlzKS5vbihcImZvY3VzXCIsIGZ1bmN0aW9uKGV2dCkge1xuICAgICAgLy8g0J3Rg9C20L3Qviwg0YfRgtC+0LHRiyDQvNC10L3RjiDQt9Cw0LrRgNGL0LLQsNC70L7RgdGMINC4INGB0YLRgNCw0L3QuNGG0LAg0YHQutGA0L7Qu9C70LjQu9Cw0YHRjCDQtNC+INGB0LXQutGG0LjQuFxuICAgICAgaWYgKCQoXCIubWVudVwiKS5oYXNDbGFzcyhcImlzLXNob3dcIikpIHtcblxuICAgICAgICAkKFwiLm1lbnVcIikucmVtb3ZlQ2xhc3MoXCJpcy1zaG93XCIpO1xuICAgICAgICAkKFwiLmpzLW9wZW4tbWVudVwiKS5yZW1vdmVDbGFzcyhcImlzLXNob3dcIik7XG4gICAgICAgICQoJ2JvZHknKS5yZW1vdmVDbGFzcygnaXMtbWVudS1vcGVuJykucmVtb3ZlQXR0cignZGF0YS1zY3JvbGwnKTtcbiAgICAgICAgY2hlY2tIYXNoKCk7XG5cbiAgICAgIC8vINCe0LHRi9GH0L3Ri9C5INGB0LrRgNC40L/RgiDRgdC60YDQvtC70LvQsCDQtNC+INC90LXQvtCx0YXQvtC00LjQvNC+0Lkg0YHQtdC60YbQuNC4INCyIGRhdGEg0LDRgtGA0LjQsdGD0YLQtSDQsdC10Lcg0L/QtdGA0LXQt9Cw0LPRgNGD0LfQutC4INGB0YLRgNCw0L3QuNGG0YtcbiAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgdmFyIGhhc2ggPSAkKHRoaXMpLmF0dHIoJ2RhdGEtaHJlZicpO1xuXG4gICAgICAgIGlmICgkKGhhc2gpLmxlbmd0aCkge1xuICAgICAgICAgICAgJCgnaHRtbCwgYm9keScpLmFuaW1hdGUoe1xuICAgICAgICAgICAgICAgIHNjcm9sbFRvcDogKCQoaGFzaCkub2Zmc2V0KCkudG9wIC0gMTAwKSxcbiAgICAgICAgICAgIH0sIDkwMCwgJ3N3aW5nJyk7XG4gICAgICAgIH1cblxuICAgICAgfVxuICAgIH0pO1xuICB9KTtcblxufTtcblxuZXhwb3J0IGRlZmF1bHQgYW5rb3JzO1xuIiwiaW1wb3J0IG5vZGVMaXN0Rm9yRWFjaCBmcm9tICcuL25vZGUtbGlzdC1mb3ItZWFjaCc7XG5pbXBvcnQgbWVudU9wZW4gZnJvbSAnLi9tZW51LW9wZW4nO1xuaW1wb3J0IHRlY2hub2xvZ2llc0FuaW1hdGlvbiBmcm9tICcuL3RlY2hub2xvZ2llcy1hbmltYXRpb24nO1xuaW1wb3J0IGhlYWRlclNjcm9sbCBmcm9tICcuL2hlYWRlcic7XG5pbXBvcnQgYW5rb3JzIGZyb20gJy4vYW5rb3JzJztcblxuY2xhc3MgQXBwIHtcbiAgc3RhdGljIGluaXQoKSB7XG4gICAgbm9kZUxpc3RGb3JFYWNoKCk7XG4gICAgbWVudU9wZW4oKTtcbiAgICB0ZWNobm9sb2dpZXNBbmltYXRpb24oKTtcbiAgICBoZWFkZXJTY3JvbGwoKTtcbiAgICBhbmtvcnMoKTtcbiAgfVxufVxuXG5cbkFwcC5pbml0KCk7XG53aW5kb3cuQXBwID0gQXBwO1xuIl0sIm5hbWVzIjpbIm5vZGVMaXN0Rm9yRWFjaCIsIndpbmRvdyIsIk5vZGVMaXN0IiwicHJvdG90eXBlIiwiZm9yRWFjaCIsImNhbGxiYWNrIiwidGhpc0FyZyIsImkiLCJsZW5ndGgiLCJjYWxsIiwibWVudU9wZW4iLCIkYnV0dG9uc01lbnUiLCIkIiwiJG1lbnUiLCIkYnV0dG9uQ2xvc2UiLCIkaGVhZGVyIiwiZWFjaCIsIiRidG4iLCJzY3JvbGxIZWFkZXIiLCJoYXNDbGFzcyIsInNjcm9sbFRvcCIsImFkZENsYXNzIiwicmVtb3ZlQ2xhc3MiLCJjbGljayIsInBvcyIsInBhcnNlSW50IiwiYXR0ciIsInJlbW92ZUF0dHIiLCJzY3JvbGxUbyIsInNldFRpbWVvdXQiLCJwYWdlUG9zIiwib24iLCJ0ZWNobm9sb2dpZXNBbmltYXRpb24iLCJjb250YWluZXIiLCJpdGVtcyIsImZpbmQiLCJ2YWx1ZSIsInZhbCIsImNzcyIsImV2ZW50IiwiaXNJblZpZXciLCJoZWFkZXJTY3JvbGwiLCJtYWluIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiaW50cm9Ub3AiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ0b3AiLCJhbmtvcnMiLCJsaW5rcyIsInBhcnRuYW1lIiwibG9jYXRpb24iLCJwYXRobmFtZSIsImNoZWNrSGFzaCIsImhhc2giLCJhbmltYXRlIiwib2Zmc2V0IiwicmVhZHkiLCJldnQiLCJwcmV2ZW50RGVmYXVsdCIsIkFwcCIsImluaXQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUFBQSxJQUFNQSxlQUFlLEdBQUcsU0FBbEJBLGVBQWtCLEdBQU07RUFDNUIsTUFBSSxjQUFjQyxNQUFkLElBQXdCLENBQUNDLFFBQVEsQ0FBQ0MsU0FBVCxDQUFtQkMsT0FBaEQsRUFBeUQ7RUFDdkRGLElBQUFBLFFBQVEsQ0FBQ0MsU0FBVCxDQUFtQkMsT0FBbkIsR0FBNkIsVUFBVUMsUUFBVixFQUFvQkMsT0FBcEIsRUFBNkI7RUFDMURBLE1BQUFBLE9BQU8sR0FBR0EsT0FBTyxJQUFJTCxNQUFyQjs7RUFDQSxXQUFLLElBQUlNLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUcsS0FBS0MsTUFBekIsRUFBaUNELENBQUMsRUFBbEMsRUFBc0M7RUFDdENGLFFBQUFBLFFBQVEsQ0FBQ0ksSUFBVCxDQUFjSCxPQUFkLEVBQXVCLEtBQUtDLENBQUwsQ0FBdkIsRUFBZ0NBLENBQWhDLEVBQW1DLElBQW5DO0VBQ0M7RUFDQSxLQUxEO0VBTUQ7RUFDRixDQVREOztFQ0FBLElBQU1HLFFBQVEsR0FBRyxTQUFYQSxRQUFXLEdBQU07RUFDckI7RUFDQSxNQUFNQyxZQUFZLEdBQUdDLENBQUMsQ0FBQyxlQUFELENBQXRCOztFQUVBLE1BQUlELFlBQVksQ0FBQ0gsTUFBakIsRUFBeUI7RUFDdkIsUUFBTUssS0FBSyxHQUFHRCxDQUFDLENBQUMsT0FBRCxDQUFmO0VBQ0EsUUFBTUUsWUFBWSxHQUFHRixDQUFDLENBQUMsZUFBRCxDQUF0QjtFQUNBLFFBQU1HLE9BQU8sR0FB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
